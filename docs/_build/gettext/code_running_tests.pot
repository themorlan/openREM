# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2022, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-05 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../code_running_tests.rst:3
msgid "Running the test suite"
msgstr ""

#: ../../code_running_tests.rst:5
msgid "**TODO: Update for Python 3, OpenREM 1.0**"
msgstr ""

#: ../../code_running_tests.rst:8
msgid "Code formatting and tests"
msgstr ""

#: ../../code_running_tests.rst:10
msgid "Steps before pushing to Bitbucket. Commands assume you are in the root directory of the git repository, at the same level as README.rst and requirements.txt etc, and that you have activated a virtualenv with the project requirements installed (``pip install -e .``) plus Black (``pip install black``)"
msgstr ""

#: ../../code_running_tests.rst:14
msgid "Run black against the code:"
msgstr ""

#: ../../code_running_tests.rst:20
msgid "Check the changes made, edit where necessary. Black is an opinionated Python formatter and in general OpenREM code should be subjected to it. The flake8 tests are tuned to agree with Black."
msgstr ""

#: ../../code_running_tests.rst:23
msgid "Run the Django tests:"
msgstr ""

#: ../../code_running_tests.rst:31
msgid "**old stuff to be updated**"
msgstr ""

#: ../../code_running_tests.rst:34
msgid "Preparation"
msgstr ""

#: ../../code_running_tests.rst:37
msgid "Install the dependencies and OpenREM"
msgstr ""

#: ../../code_running_tests.rst:39
msgid "OpenREM is a Django application, and therefore we use Django's test-execution framework to test OpenREM."
msgstr ""

#: ../../code_running_tests.rst:41
msgid "The first thing to do is to create a local copy of the git repository, then install all of OpenREM's dependencies in a virtualenv."
msgstr ""

#: ../../code_running_tests.rst:44
msgid "You will need ``python``, ``pip``, ``git`` and ``virtualenv`` installed - see the links on the : doc : `install-prep` docs for the latter, but you might try ``pip install virtualenv``."
msgstr ""

#: ../../code_running_tests.rst:52
msgid "Now create the virtualenv:"
msgstr ""

#: ../../code_running_tests.rst:61
msgid "At this stage there should be a ``(veOpenREM)`` prefix to our prompt telling us the virtualenv is activated."
msgstr ""

#: ../../code_running_tests.rst:63
msgid "Now install the dependencies:"
msgstr ""

#: ../../code_running_tests.rst:70
msgid "In the future it might be necessary to install numpy too for testing."
msgstr ""

#: ../../code_running_tests.rst:73
msgid "Configure OpenREM"
msgstr ""

#: ../../code_running_tests.rst:75
msgid "Rename and configure ``openremproject/local_settings.py.example`` and ``openremproject/wsgi.py.example`` as per the : doc :`install` docs."
msgstr ""

#: ../../code_running_tests.rst:78
msgid "Create a database following the same : doc :`install` instructions."
msgstr ""

#: ../../code_running_tests.rst:81
msgid "Run the tests!"
msgstr ""

#: ../../code_running_tests.rst:83
msgid "Making sure the virtualenv is activated, move to ``openremrepo/openrem`` and run:"
msgstr ""

#: ../../code_running_tests.rst:89
msgid "All the tests that exit in ``openrem/remapp/tests/`` will now be run."
msgstr ""

#: ../../code_running_tests.rst:93
msgid "Related tools"
msgstr ""

#: ../../code_running_tests.rst:96
msgid "Enabling django-debug-toolbar"
msgstr ""

#: ../../code_running_tests.rst:98
msgid "See :doc:`enabling_debug_toolbar`"
msgstr ""

#: ../../code_running_tests.rst:101
msgid "Creating test versions of production systems"
msgstr ""

#: ../../code_running_tests.rst:103
msgid "If you wish to create a duplicate install to test upgrades etc, refer to :ref:`restore-psql-linux` and the preceding text regarding making backups."
msgstr ""
