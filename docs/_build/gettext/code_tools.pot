# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-25 22:47+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../code_tools.rst:3
#: 21011dc6412441679f3433821dd4caec
msgid "Tools and helper modules"
msgstr ""

#: ../../code_tools.rst:6
#: df2e6ac83c294a1db246fa68e4093d11
msgid "Get values"
msgstr ""

#: ../../code_tools.rst:7
#: 2d28005d732d4d17b554b4633c2deb51
msgid "Tiny modules to reduce repetition in the main code when extracting information from DICOM headers using pydicom."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:1
#: f8a07233d3cc4e9baa47a9679285cfe2
msgid "Get DICOM value by keyword reference."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:0
#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.check_uid:0
#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.record_sop_instance_uid:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:0
#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:0
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
#: 437b885a90334bf3bdea24e2356a7ab8
msgid "Parameters"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:3
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:3
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:3
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:3
#: bc0a280b1c434523856d76834b227019
#: bc0a280b1c434523856d76834b227019
#: bc0a280b1c434523856d76834b227019
#: bc0a280b1c434523856d76834b227019
msgid "DICOM keyword, no spaces or plural as per dictionary."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:5
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:8
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:5
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:5
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:5
#: 2b560c0a4c1b481d940f6b1b45520bbf
#: 2b560c0a4c1b481d940f6b1b45520bbf
#: 2b560c0a4c1b481d940f6b1b45520bbf
#: 2b560c0a4c1b481d940f6b1b45520bbf
#: 2b560c0a4c1b481d940f6b1b45520bbf
msgid "The DICOM dataset containing the tag."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:0
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:0
#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.check_uid:0
#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.record_sop_instance_uid:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time:0
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:0
#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:0
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
#: c6125422b4af4347975fd4c70b630780
msgid "Returns"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_kw:7
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:10
#: bd8b9708560441e38795a75c39dafd34
#: bd8b9708560441e38795a75c39dafd34
msgid "str. -- value"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:1
#: d0c3bebbb89a46b5a0fc3b0dfd4b07b1
msgid "Get DICOM value by tag group and element number."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:3
#: 2773680999854effa6ea13e619714015
msgid "Always use get_value_kw by preference for readability. This module can be required when reading private elements."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_value_num:6
#: a5138a7c71924c4d85549add407b6ea7
msgid "DICOM group and element number as a single hexadecimal number (prefix 0x)."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:1
#: a5b9425b6fcc4c41a77f2262ea8be013
msgid "From a DICOM sequence, get the code value."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:3
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:3
#: c44e82eab4104ccb84e55704fb1efc72
#: c44e82eab4104ccb84e55704fb1efc72
msgid "DICOM sequence name."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:5
#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:5
#: 9d0e656396f840729a8299a17042edfb
#: 9d0e656396f840729a8299a17042edfb
msgid "The DICOM dataset containing the sequence."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_value:7
#: c44e82eab4104ccb84e55704fb1efc72
msgid "int. -- code value"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:1
#: 367b1634207247e99bb8c2b5127cccaa
msgid "From a DICOM sequence, get the code meaning."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_seq_code_meaning:7
#: cb6ff6f5976e4bc9a1dde915e4ca635f
msgid "str. -- code meaning"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:1
#: 054bb2ac8a2b4fc3bf2f0b17306e67e3
msgid "Create a code_value code_meaning pair entry in the ContextID table if it doesn't already exist."
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:4
#: a6c023eb6db043cf947446fda07487a1
msgid "Code value as defined in the DICOM standard part 16"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:6
#: 11d6173a0ac340ff8acc6f3519cce0e0
msgid "Code meaning as defined in the DICOM standard part 16"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_or_create_cid:8
#: 6988169c87804afc80d7254dcf0af6bb
msgid "ContextID entry for code value passed"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.return_for_export:1
#: 7248fe32234a45f08ab96f2d2f09b87f
msgid "Prevent errors due to missing data in models :param model: database table :param field: database field :return: value or None"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.test_numeric_value:1
#: b4d71b58ec0e4144b4e3e6fcc495a46e
msgid "Tests if string can be converted to a float. If it can, return it :param string_number: string to test if is a number :return: string if number, nothing otherwise"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.safe_strings:1
#: dfbb8e00387a4f389da2d4ab1eb12703
msgid "Function to encode non-ASCII characters correctly. Probably not required any longer, but leaving in for now. :param string: String to encode :param char_set: Character set used by DICOM file :return: Encoded string"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.list_to_string:1
#: c30ad5cf8f89436ea08b5dd1e4491bf8
msgid "Turn multivalue names into a single string for correct encoding and pretty reproduction :param dicom_value: returned DICOM value, usually a name field. Might be single (string) or multivalue (list) :return: string of name(s)"
msgstr ""

#: ../../../openrem/remapp/tools/get_values.py:docstring of openrem.remapp.tools.get_values.get_keys_by_value:1
#: bd45d1706dce425d9bf741827f0d40f9
msgid "Get a list of keys from a dictionary which have the given value :param dict_of_elements: a dictionary of elements :param value_to_find: the value to look for in the dictionary :return: list of key names matching the given value"
msgstr ""

#: ../../code_tools.rst:14
#: 40cde7ce2cbb4654aa0c5bc4ace04c68
msgid "Check if UID exists"
msgstr ""

#: ../../code_tools.rst:15
#: a90d8eda8bb54d65820aa4eeb073fb50
msgid "Small module to check if UID already exists in the database."
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.check_uid:1
#: a90d8eda8bb54d65820aa4eeb073fb50
msgid "Check if UID already exists in database."
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.check_uid:3
#: bac0fdd69b664f89877e3b823cc116fe
msgid "Study UID."
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.check_uid:5
#: f1e46a6e771e40a3b934073207ca9e94
msgid "1 if it does exist, 0 otherwise"
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.record_sop_instance_uid:1
#: d9c47d4f5ac3475399d9b5d62dbab6bb
msgid "Record the object's SOP Instance UID so we can ignore it next time. If an object does need to be imported again, the original one needs to be deleted first."
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.record_sop_instance_uid:4
#: 53d8568932474026a536730a79189dd3
msgid "GeneralStudyModuleAttr database object"
msgstr ""

#: ../../../openrem/remapp/tools/check_uid.py:docstring of openrem.remapp.tools.check_uid.record_sop_instance_uid:5
#: 7dd15f5d7838412fb1595097c779bb59
msgid "SOP Instance UID of object being imported"
msgstr ""

#: ../../code_tools.rst:21
#: c44e82eab4104ccb84e55704fb1efc72
msgid "DICOM time and date values"
msgstr ""

#: ../../code_tools.rst:22
#: d6cd85a6d36347319103d117aab9f0cf
msgid "Module to convert betweeen DICOM and Python dates and times."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:1
#: fad447cf0d604d51b54d856ed680b5e4
msgid "Get DICOM date string and return Python date."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date:7
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date:5
#: c44e82eab4104ccb84e55704fb1efc72
#: c44e82eab4104ccb84e55704fb1efc72
msgid "Python date value"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:1
#: d6cd85a6d36347319103d117aab9f0cf
msgid "Get DICOM time string and return Python time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_time:7
#: c44e82eab4104ccb84e55704fb1efc72
msgid "python time value"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:1
#: d6cd85a6d36347319103d117aab9f0cf
msgid "Get DICOM date time string and return Python date time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.get_date_time:7
#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date_time:5
#: c44e82eab4104ccb84e55704fb1efc72
#: c44e82eab4104ccb84e55704fb1efc72
msgid "Python date time value"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date:1
#: 4425d2da13d843d7abc59bed6dc2ebc1
msgid "Given a DICOM date, return a Python date."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date:3
#: c44e82eab4104ccb84e55704fb1efc72
msgid "DICOM style date."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_time:1
#: 0d46593d13fb480f80ca0202c7829bca
msgid "Given a DICOM time, return a Python time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_time:3
#: c44e82eab4104ccb84e55704fb1efc72
msgid "DICOM style time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_time:5
#: c44e82eab4104ccb84e55704fb1efc72
msgid "Python time value"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date_time:1
#: d6cd85a6d36347319103d117aab9f0cf
msgid "Given a DICOM date time, return a Python date time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_date_time:3
#: c44e82eab4104ccb84e55704fb1efc72
msgid "DICOM style date time."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date:1
#: e2a0aeadb5c046a48f657a9fd532cd5b
msgid "Given a Python date, return a DICOM date :param pythondate:  Date :type pythondate:   Python date object :returns:           DICOM date as string"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:1
#: 1b1b646042a946a481302654d8d6b91c
msgid "Given one or two dates of the form yyyy-mm-dd, return a DICOM date range."
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:3
#: 80308d9a9b524053b398151dcbe9f3a2
msgid "Date from, string, yyyy-mm-dd, 1900-01-01 if None or badly formatted"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:4
#: 50fd177101f44978a60b9c460b8198b2
msgid "Date until, string, yyyy-mm-dd, today if None or badly formatted"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:5
#: 53a89b4594b34c7485d2fa8718e291f0
msgid "Single date range, bool, default False"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_date_range:6
#: cf5934e3e9db41e48eaf8b1a46a1286b
msgid "DICOM formatted date range or single date"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time:1
#: c28f3ff9896740a8b845eff1cdf48f11
msgid "Return DICOM formatted time without seconds from python time"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time:3
#: 21555a6d22cb4c919da36663ff181495
msgid "Python datetime.time object"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time:4
#: 0b204ebe617b4bc1a8f0abaf560fae61
msgid "string, %H%M"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:1
#: 59e0ff527dba433a9ffdf2ad5b7e25bd
msgid "Given one or two times of the format 0123, return DICOM formatted time range (without seconds)"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:3
#: 50dbf548c165498d9a4b883a815ab506
msgid "time, format 0123, 0000 if None"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:4
#: e0f2e9cb1eed4a2c871329e8f48c5b83
msgid "time, format 0123, 2359 if None"
msgstr ""

#: ../../../openrem/remapp/tools/dcmdatetime.py:docstring of openrem.remapp.tools.dcmdatetime.make_dcm_time_range:5
#: 5956277b936d43e8861bce3716e01bfb
msgid "time range, string, format 0123-1234"
msgstr ""

#: ../../code_tools.rst:28
#: b8cb7eac2ba645eda7bb165770826ad2
msgid "Test for QA or other non-patient related studies"
msgstr ""

#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:1
#: e51ee0eb4eb5421690c0a6664160756f
msgid "Looks for indications that a study might be a test or QA study."
msgstr ""

#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:3
#: da0316fd9e0842328d66850960868da0
msgid "Some values that might indicate a study was for QA or similar purposes are not recorded in the database, for example patient name. Therefore this module attempts to find such indications and creates an xml style string that can be recorded in the database on study import."
msgstr ""

#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:8
#: 575028aca25c434f81902f0cc1249ccf
msgid "The DICOM dataset."
msgstr ""

#: ../../../openrem/remapp/tools/not_patient_indicators.py:docstring of openrem.remapp.tools.not_patient_indicators.get_not_pt:10
#: 52de7426c67c46568b481d9221635793
msgid "str. -- xml style string if any trigger values are found."
msgstr ""
