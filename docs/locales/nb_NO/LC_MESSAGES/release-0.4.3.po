# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-05 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../release-0.4.3.rst:2
msgid "OpenREM Release Notes version 0.4.3"
msgstr ""

#: ../../release-0.4.3.rst:5
msgid "Headline changes"
msgstr ""

#: ../../release-0.4.3.rst:8
msgid ""
"Export of study information is now handled by a task queue - no more "
"export time-outs."
msgstr ""

#: ../../release-0.4.3.rst:9
msgid ""
"Patient size information in csv files can now be uploaded and imported "
"via a web interface."
msgstr ""

#: ../../release-0.4.3.rst:10
msgid ""
"Proprietary projection image object created by Hologic tomography units "
"can now be interrogated for details of the tomosynthesis exam."
msgstr ""

#: ../../release-0.4.3.rst:11
msgid ""
"Settings.py now ships with its proper name, this will overwrite important"
" local settings if upgrade is from 0.3.9 or earlier."
msgstr ""

#: ../../release-0.4.3.rst:12
msgid ""
"Time since last study is no longer wrong just because of daylight saving "
"time!"
msgstr ""

#: ../../release-0.4.3.rst:13
msgid "Django release set to 1.6; OpenREM isn't ready for Django 1.7 yet"
msgstr ""

#: ../../release-0.4.3.rst:14
msgid ""
"The inner ``openrem`` Django project folder is now called "
"``openremproject`` to avoid import conflicts with Celery on Windows"
msgstr ""

#: ../../release-0.4.3.rst:15
msgid "DEBUG mode now defaults to False"
msgstr ""

#: ../../release-0.4.3.rst:18
msgid "Specific upgrade instructions"
msgstr ""

#: ../../release-0.4.3.rst:20
msgid ""
"For the original upgrade instructions, the last docs release to include "
"them was `0.10.0-docs "
"<https://docs.openrem.org/en/0.10.0-docs/release-0.4.3.html>`_"
msgstr ""

#~ msgid ""
#~ "**Always make sure you have converted"
#~ " your database to South before "
#~ "attempting an upgrade**"
#~ msgstr ""

#~ msgid "Quick reminder of how, if you haven't done it already:"
#~ msgstr ""

#~ msgid "Linux::"
#~ msgstr ""

#~ msgid "Windows::"
#~ msgstr ""

#~ msgid "Upgrading from 0.3.9 or earlier"
#~ msgstr ""

#~ msgid ""
#~ "**It is essential that you upgrade "
#~ "to at least 0.4.0 first**, then "
#~ "upgrade to 0.4.3. Otherwise the settings"
#~ " file will be overwritten and you "
#~ "will lose your database settings. There"
#~ " is also a trickier than usual "
#~ "database migration and instructions for "
#~ "setting up users. *Fresh installs should"
#~ " start with the latest version.*"
#~ msgstr ""

#~ msgid "Upgrade to version 0.4.2"
#~ msgstr ""

#~ msgid "(Will need ``sudo`` or equivalent if using linux without a virtualenv)"
#~ msgstr ""

#~ msgid ""
#~ "Then follow the instructions in "
#~ ":doc:`release-0.4.0` from migrating the "
#~ "database onwards, before coming back to"
#~ " these instructions."
#~ msgstr ""

#~ msgid "Upgrading from 0.4.0 or above"
#~ msgstr ""

#~ msgid "Install OpenREM version 0.4.3"
#~ msgstr ""

#~ msgid "RabbitMQ"
#~ msgstr ""

#~ msgid ""
#~ "The message broker RabbitMQ needs to "
#~ "be installed to enable the export "
#~ "and upload features"
#~ msgstr ""

#~ msgid "Linux - Follow the guide at http://www.rabbitmq.com/install-debian.html"
#~ msgstr ""

#~ msgid ""
#~ "Windows - Follow the guide at "
#~ "http://www.rabbitmq.com/install-windows.html"
#~ msgstr ""

#~ msgid "Move and edit local_settings.py file and wsgi.py files"
#~ msgstr ""

#~ msgid ""
#~ "The inner ``openrem`` Django project "
#~ "folder has now been renamed "
#~ "``openremproject`` to avoid import confusion"
#~ " that prevented Celery working on "
#~ "Windows."
#~ msgstr ""

#~ msgid ""
#~ "When you upgrade, the ``local_settings.py``"
#~ " file and the ``wsgi.py`` file will"
#~ " remain in the old ``openrem`` "
#~ "folder. Both need to be moved "
#~ "across to the ``openremproject`` folder, "
#~ "and edited as below."
#~ msgstr ""

#~ msgid "The new and old folders will be found in:"
#~ msgstr ""

#~ msgid "Linux: ``/usr/local/lib/python2.7/dist-packages/openrem/``"
#~ msgstr ""

#~ msgid ""
#~ "Linux with virtualenv: "
#~ "``/home/myname/openrem/lib/python2.7/site-packages/openrem/``"
#~ msgstr ""

#~ msgid "Windows: ``C:\\Python27\\Lib\\site-packages\\openrem\\``"
#~ msgstr ""

#~ msgid "Edit the local_settings.py file"
#~ msgstr ""

#~ msgid ""
#~ "The ``MEDIA_ROOT`` path needs to be "
#~ "defined. This is the place where "
#~ "the study exports will be stored "
#~ "for download and where the patient "
#~ "size information csv files will be "
#~ "stored temporarily whilst they are bing"
#~ " processed."
#~ msgstr ""

#~ msgid ""
#~ "The path set for ``MEDIA_ROOT`` is "
#~ "up to you, but the user that "
#~ "runs the webserver must have read/write"
#~ " access to the location specified "
#~ "because it is the webserver than "
#~ "reads and writes the files. In a"
#~ " debian linux, this is likely to "
#~ "be ``www-data`` for a production "
#~ "install. Remember to use forward slashes"
#~ " in the config file, even for "
#~ "Windows."
#~ msgstr ""

#~ msgid "Linux example::"
#~ msgstr ""

#~ msgid "Windows example::"
#~ msgstr ""

#~ msgid ""
#~ "The ``ALLOWED_HOSTS`` needs to be "
#~ "defined, as the ``DEBUG`` mode is "
#~ "now set to ``False``. This needs "
#~ "to contain the server name or IP"
#~ " address that will be used in "
#~ "the URL in the web browser. For"
#~ " example::"
#~ msgstr ""

#~ msgid ""
#~ "A dot before a hostname allows for"
#~ " subdomains (eg www.doseserver), a dot "
#~ "after a hostname allows for FQDNs "
#~ "(eg doseserver.ad.trust.nhs.uk). Alternatively, a"
#~ " single ``'*'`` allows any host, but"
#~ " removes the security the feature "
#~ "gives you."
#~ msgstr ""

#~ msgid "Edit the wsgi.py file with the new project folder name"
#~ msgstr ""

#~ msgid ""
#~ "If you aren't using the wsgi.py "
#~ "file as part of your webserver "
#~ "setup, you might like to simply "
#~ "rename the ``wsgi.py.example`` file in "
#~ "the ``openremproject`` folder."
#~ msgstr ""

#~ msgid "If you are using it, edit the line::"
#~ msgstr ""

#~ msgid "to read::"
#~ msgstr ""

#~ msgid "Tidying up"
#~ msgstr ""

#~ msgid ""
#~ "Finally, you should delete the old "
#~ "``openrem`` folder - you might like "
#~ "to take a backup first!"
#~ msgstr ""

#~ msgid "Database migration"
#~ msgstr ""

#~ msgid "*Assuming no virtualenv*"
#~ msgstr ""

#~ msgid "Web server"
#~ msgstr ""

#~ msgid ""
#~ "If you are using a production "
#~ "webserver, you will probably need to "
#~ "edit some of the configuration to "
#~ "reflect the change in location of "
#~ "``settings.py``, for example "
#~ "``DJANGO_SETTINGS_MODULE = openremproject.settings``, "
#~ "and then restart the web server. "
#~ "You may need to do something "
#~ "similar for the location of ``wsgi.py``."
#~ msgstr ""

#~ msgid ""
#~ "If you are using the built-in "
#~ "test web server (`not for production "
#~ "use`), then the static files will "
#~ "not be served unless you add "
#~ "``--insecure`` to the command. This is"
#~ " one of the consequences of setting"
#~ " ``DEBUG`` to ``False``::"
#~ msgstr ""

#~ msgid "Start the Celery task queue"
#~ msgstr ""

#~ msgid ""
#~ "The webserver and Celery both need "
#~ "to be able to read and write "
#~ "to the ``MEDIA_ROOT`` location. Therefore "
#~ "you might wish to consider starting "
#~ "Celery using the same user or "
#~ "group as the webserver, and setting "
#~ "the file permissions accordingly."
#~ msgstr ""

#~ msgid "For testing, in a new shell: *(assuming no virtualenv)*"
#~ msgstr ""

#~ msgid ""
#~ "For production use, see "
#~ "http://celery.readthedocs.org/en/latest/tutorials/daemonizing.html"
#~ msgstr ""

