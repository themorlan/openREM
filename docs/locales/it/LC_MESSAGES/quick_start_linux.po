# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-12 09:38+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../quick_start_linux.rst:2
msgid "One page complete Ubuntu install"
msgstr ""

#: ../../quick_start_linux.rst:4
msgid "This setup is no longer recommended - the Docker :doc:`installation` method is instead. If a non-Docker installation is required then this guide can be followed."
msgstr ""

#: ../../quick_start_linux.rst:7
msgid "This install is based on Ubuntu 18.04 using:"
msgstr ""

#: ../../quick_start_linux.rst:9
msgid "Python 3.8 running in a virtualenv"
msgstr ""

#: ../../quick_start_linux.rst:10
msgid "Database: PostgreSQL"
msgstr ""

#: ../../quick_start_linux.rst:11
msgid "DICOM Store SCP: Orthanc running on port 104"
msgstr ""

#: ../../quick_start_linux.rst:12
msgid "Webserver: NGINX with Gunicorn"
msgstr ""

#: ../../quick_start_linux.rst:13
msgid "Daemonisation: systemd scripts for Celery and Gunicorn"
msgstr ""

#: ../../quick_start_linux.rst:14
msgid "All OpenREM files in ``/var/dose/`` with group owner of ``openrem``"
msgstr ""

#: ../../quick_start_linux.rst:15
msgid "Collects any Physics (QA) images and zips them"
msgstr ""

#: ../../quick_start_linux.rst:17
msgid "The instructions should work for Ubuntu 20.04 too, references to bionic will be focal instead."
msgstr ""

#: ../../quick_start_linux.rst:21
msgid "Initial prep"
msgstr ""

#: ../../quick_start_linux.rst:23
msgid "**Host file**"
msgstr ""

#: ../../quick_start_linux.rst:25
msgid "First edit ``/etc/hosts`` to add the local server name -- else ``rabbitmq-server`` will not start when installed:"
msgstr ""

#: ../../quick_start_linux.rst:31
msgid "Modify the content to ensure the following two lines are present -- **substitute the correct server hostname on the second line**::"
msgstr ""

#: ../../quick_start_linux.rst:37
msgid "``Ctrl-o`` (write-[o]ut), ``Return`` to accept, then ``Ctrl-x`` to e[x]it"
msgstr ""

#: ../../quick_start_linux.rst:39
msgid "**Apt sources**"
msgstr ""

#: ../../quick_start_linux.rst:41
msgid "We will need the ``universe`` repository enabled. Check first:"
msgstr ""

#: ../../quick_start_linux.rst:47
msgid "Look for::"
msgstr ""

#: ../../quick_start_linux.rst:52
msgid "If these two lines are not there, add them in (``sudo nano /etc/apt/sources.list``)."
msgstr ""

#: ../../quick_start_linux.rst:54
msgid "**Groups**"
msgstr ""

#: ../../quick_start_linux.rst:56
msgid "Now create new group ``openrem`` and add your user to it (``$USER`` will automatically substitute for the user you are running as) :"
msgstr ""

#: ../../quick_start_linux.rst:69
msgid "At a later stage, to add a second administrator just add them to the ``openrem`` group in the same way."
msgstr ""

#: ../../quick_start_linux.rst:71
msgid "**Folders**"
msgstr ""

#: ../../quick_start_linux.rst:73
msgid "Create the folders we need, and set the permissions. In due course, the ``orthanc`` user and the ``www-data`` user will be added to the ``openrem`` group, and the 'sticky' group setting below will enable both users to write to the logs etc:"
msgstr ""

#: ../../quick_start_linux.rst:102
msgid "Install apt packages and direct downloads"
msgstr ""

#: ../../quick_start_linux.rst:116
msgid "Create the virtualenv"
msgstr ""

#: ../../quick_start_linux.rst:118
msgid "Create a virtualenv (Python local environment) in the folder we created:"
msgstr ""

#: ../../quick_start_linux.rst:127
msgid "Activate the virtualenv"
msgstr ""

#: ../../quick_start_linux.rst:129
msgid "Activate the virtualenv (note the ``.`` -- you can also use the word ``source``):"
msgstr ""

#: ../../quick_start_linux.rst:136
msgid "Install Python packages"
msgstr ""

#: ../../quick_start_linux.rst:147
msgid "Add orthanc and www-data users to openrem group"
msgstr ""

#: ../../quick_start_linux.rst:158
msgid "Database and OpenREM config"
msgstr ""

#: ../../quick_start_linux.rst:161
msgid "Setup PostgreSQL database"
msgstr ""

#: ../../quick_start_linux.rst:163
msgid "Create a postgres user, and create the database. You will be asked to enter a new password (twice). This will be needed when configuring OpenREM:"
msgstr ""

#: ../../quick_start_linux.rst:174
msgid "If you are migrating from another server, you could at this point create a template0 database to restore into. See :ref:`restore-psql-linux` for details."
msgstr ""

#: ../../quick_start_linux.rst:177
msgid "Update the PostgreSQL client authentication configuration. Add the following line anywhere near the bottom of the file, for example in the gap before ``# DO NOT DISABLE`` or anywhere in the table that follows. The number of spaces between each word is not important (one or more)."
msgstr ""

#: ../../quick_start_linux.rst:189
msgid "Reload postgres:"
msgstr ""

#: ../../quick_start_linux.rst:196
msgid "Configure OpenREM"
msgstr ""

#: ../../quick_start_linux.rst:198
msgid "First navigate to the Python openrem folder and copy the example local_settings and wsgi files to remove the ``.example`` suffixes:"
msgstr ""

#: ../../quick_start_linux.rst:207
msgid "Edit the new local_settings file"
msgstr ""

#: ../../quick_start_linux.rst:272
msgid "Now create the database. Make sure you are still in the openrem python folder and the virtualenv is active â€” prompt will look like"
msgstr ""

#: ../../quick_start_linux.rst:279
msgid "Otherwise see :ref:`activatevirtualenv` and navigate back to that folder:"
msgstr ""

#: ../../quick_start_linux.rst:298
msgid "Generate translation binary files"
msgstr ""

#: ../../quick_start_linux.rst:305
msgid "Webserver"
msgstr ""

#: ../../quick_start_linux.rst:308
msgid "Configure NGINX and Gunicorn"
msgstr ""

#: ../../quick_start_linux.rst:310
msgid "Create the OpenREM site config file"
msgstr ""

#: ../../quick_start_linux.rst:333
msgid "Remove the default config and make ours active:"
msgstr ""

#: ../../quick_start_linux.rst:343
msgid "Add the static files to the static folder for NGINX to serve. Again, you need to ensure the virtualenv is active in your console and you are in the ``site-packages/openrem/`` folder:"
msgstr ""

#: ../../quick_start_linux.rst:350
msgid "Create the Gunicorn systemd service file:"
msgstr ""

#: ../../quick_start_linux.rst:373
msgid "Load the new systemd configurations:"
msgstr ""

#: ../../quick_start_linux.rst:379
msgid "Set the new Gunicorn service to start on boot:"
msgstr ""

#: ../../quick_start_linux.rst:385
msgid "Start the Gunicorn service, and restart the NGINX service:"
msgstr ""

#: ../../quick_start_linux.rst:393
msgid "Test the webserver"
msgstr ""

#: ../../quick_start_linux.rst:395
msgid "You should now be able to browse to the OpenREM server from another PC."
msgstr ""

#: ../../quick_start_linux.rst:397
msgid "You can check that NGINX and Gunicorn are running with the following two commands:"
msgstr ""

#: ../../quick_start_linux.rst:411
msgid "Celery and Flower"
msgstr ""

#: ../../quick_start_linux.rst:413
msgid "First, create a Celery configuration file:"
msgstr ""

#: ../../quick_start_linux.rst:449
msgid "Now create the systemd service files:"
msgstr ""

#: ../../quick_start_linux.rst:503
msgid "Now register, set to start on boot, and start the services:"
msgstr ""

#: ../../quick_start_linux.rst:515
msgid "DICOM Store SCP"
msgstr ""

#: ../../quick_start_linux.rst:517
msgid "Open the following link in a new tab and copy the content (select all then Ctrl-c): |openrem_orthanc_conf_link|"
msgstr ""

#: ../../quick_start_linux.rst:519
msgid "Create the lua file to control how we process the incoming DICOM objects and paste the content in (Shift-Ctrl-v if working directly in the Ubuntu terminal, something else if you are using PuTTY etc):"
msgstr ""

#: ../../quick_start_linux.rst:526
msgid "Then edit the top section as follows -- keeping Physics test images has been configured, set to false to change this. There are other settings too that you might like to change in the second section (not displayed here):"
msgstr ""

#: ../../quick_start_linux.rst:565
msgid "Add the Lua script to the Orthanc config:"
msgstr ""

#: ../../quick_start_linux.rst:579
msgid "Optionally, you may also like to enable the HTTP server interface for Orthanc (although if the Lua script is removing all the objects as soon as they are processed, you won't see much!):"
msgstr ""

#: ../../quick_start_linux.rst:590
msgid "To see the Orthanc web interface, go to http://openremserver:8042/ -- of course change the server name to that of your server!"
msgstr ""

#: ../../quick_start_linux.rst:594
msgid "Allow Orthanc to use DICOM port"
msgstr ""

#: ../../quick_start_linux.rst:596
msgid "By default, Orthanc uses port 4242. If you wish to use a lower port, specifically the DICOM port of 104, you will need to give the Orthanc binary special permission to do so:"
msgstr ""

#: ../../quick_start_linux.rst:603
msgid "Then edit the Orthanc configuration again:"
msgstr ""

#: ../../quick_start_linux.rst:618
msgid "Finish off"
msgstr ""

#: ../../quick_start_linux.rst:620
msgid "Restart Orthanc:"
msgstr ""

#: ../../quick_start_linux.rst:627
msgid "New users, and quick access to physics folder"
msgstr ""

#: ../../quick_start_linux.rst:628
msgid "This is for new Linux users; for new OpenREM users, refer to :ref:`user-settings`"
msgstr ""

#: ../../quick_start_linux.rst:630
msgid "If you left ``local use_physics_filtering = true`` in the Orthanc configuration, you might like to give your colleagues a quick method of accessing the physics folder from their home folder. Then if they use a program like `WinSCP`_ it is easy to find and copy the QA images to another (Windows) computer on the network. WinSCP can also be run directly from a USB stick if you are unable to install software :-)"
msgstr ""

#: ../../quick_start_linux.rst:636
msgid "Add the new user (replace ``newusername`` as appropriate):"
msgstr ""

#: ../../quick_start_linux.rst:642
msgid "Then add the new user to the `openrem` group (again, replace the user name):"
msgstr ""

#: ../../quick_start_linux.rst:648
msgid "Now add a 'sym-link' to the new users home directory (again, replace the user name):"
msgstr ""

#: ../../quick_start_linux.rst:654
msgid "The new user should now be able to get to the physics folder by clicking on the ``physicsimages`` link when they log in, and should be able to browse, copy and delete the zip files and folders."
msgstr ""

#: ../../quick_start_linux.rst:658
msgid "Enable RadbbitMQ queue management interface"
msgstr ""

#: ../../quick_start_linux.rst:664
msgid "**Optional -- RabbitMQ Administrator**"
msgstr ""

#: ../../quick_start_linux.rst:666
msgid "This is not required unless you wish to interact with the RabbitMQ management interface directly. Most functions can be carried out in the OpenREM interface instead. If you do wish to create a user for this purpose, see the general instructions to :ref:`enableRabbitMQ`."
msgstr ""

#: ../../quick_start_linux.rst:671
msgid "Log locations"
msgstr ""

#: ../../quick_start_linux.rst:673
msgid "OpenREM: ``/var/dose/log/``"
msgstr ""

#: ../../quick_start_linux.rst:674
msgid "Celery: ``/var/dose/log/default.log``"
msgstr ""

#: ../../quick_start_linux.rst:675
msgid "Celery systemd: ``sudo journalctl -u openrem-celery``"
msgstr ""

#: ../../quick_start_linux.rst:676
msgid "NGINX: ``/var/log/nginx/``"
msgstr ""

#: ../../quick_start_linux.rst:677
msgid "Orthanc: ``/var/log/orthanc/Orthanc.log``"
msgstr ""

#: ../../quick_start_linux.rst:678
msgid "Gunicorn systemd: ``sudo journalctl -u openrem-gunicorn``"
msgstr ""
