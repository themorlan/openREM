# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-05 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../netdicom-nodes.rst:3
msgid "DICOM Network Configuration"
msgstr ""

#: ../../netdicom-nodes.rst:7
msgid "Configuring DICOM store nodes in OpenREM"
msgstr ""

#: ../../netdicom-nodes.rst:9
msgid ""
"You need to configure details of the DICOM store node to enable the "
"query-retrieve functionality. You will also need to have installed "
"Orthanc or an alternative:"
msgstr ""

#: ../../netdicom-nodes.rst:12
msgid "Orthanc enabled by default in Docker"
msgstr ""

#: ../../netdicom-nodes.rst:13
msgid ""
"Installed in the Linux instructions and configured at "
":ref:`dicom_store_scp_linux`"
msgstr ""

#: ../../netdicom-nodes.rst:14
msgid "Installed in the Windows instructions and configured at *to be written*"
msgstr ""

#: ../../netdicom-nodes.rst:16
msgid ""
"To configure a DICOM Store SCP, on the ``Config`` menu select ``DICOM "
"networking``, then click ``Add new Store`` and fill in the details (see "
"figure 1):"
msgstr ""

#: ../../netdicom-nodes.rst
msgid "DICOM Store SCP configuration"
msgstr ""

#: ../../netdicom-nodes.rst:25
msgid "Figure 1: DICOM Store SCP configuration"
msgstr ""

#: ../../netdicom-nodes.rst:27
msgid ""
"Name of local store node: This is the *friendly name*, such as ``OpenREM "
"store``"
msgstr ""

#: ../../netdicom-nodes.rst:28
msgid ""
"Application Entity Title of the node: This is the DICOM name for the "
"store, and must be letters or numbers only, no spaces, and a maximum of "
"16 characters"
msgstr ""

#: ../../netdicom-nodes.rst:30
msgid ""
"Port for store node: Port 104 is the reserved DICOM port, but it is "
"common to use *high* ports such as 8104, partly because ports up to 1024 "
"usually need more privileges than for the high ports. However, if there "
"is a firewall between the remote nodes (modalities, PACS) and the OpenREM"
" server, then you need to make sure that the firewall is configured to "
"allow the port you choose here"
msgstr ""

#: ../../netdicom-nodes.rst:38
msgid "Status of DICOM Store SCP nodes"
msgstr ""

#: ../../netdicom-nodes.rst:40
msgid "DICOM Store SCP advanced configuration"
msgstr ""

#: ../../netdicom-nodes.rst:-1
msgid "DICOM Store SCP status \"Alive\""
msgstr ""

#: ../../netdicom-nodes.rst:52
msgid "DICOM Store SCP status \"Association fail\""
msgstr ""

#: ../../netdicom-nodes.rst:52
msgid "Figure 3: DICOM Store SCP status - Alive and Association failed"
msgstr ""

#: ../../netdicom-nodes.rst:54
msgid ""
"DICOM Store SCP nodes that have been configured are listed in the left "
"column of the DICOM network configuration page. For each server, the "
"basic details are displayed, including the Database ID which is required "
"for command line/scripted use of the query-retrieve function."
msgstr ""

#: ../../netdicom-nodes.rst:58
msgid ""
"In the title row of the Store SCP config panel, the status will be "
"reported either as 'Server is alive' or 'Error: Association fail - server"
" not running?' - see figure 3"
msgstr ""

#: ../../netdicom-nodes.rst:64
msgid "Query retrieve of third-party system, such as a PACS or modality"
msgstr ""

#: ../../netdicom-nodes.rst:66
msgid ""
"To Query-Retrieve a remote host, you will need to configure both a local "
"Store SCP and the remote host."
msgstr ""

#: ../../netdicom-nodes.rst:68
msgid ""
"To configure a remote query retrieve SCP, on the ``Config`` menu select "
"``DICOM networking``, then click ``Add new QR Node`` and fill in the "
"details:"
msgstr ""

#: ../../netdicom-nodes.rst:71
msgid "Name of QR node: This is the *friendly name*, such as ``PACS QR``"
msgstr ""

#: ../../netdicom-nodes.rst:72
msgid ""
"AE Title of the remote node: This is the DICOM name of the remote node, "
"16 or fewer letters and numbers, no spaces"
msgstr ""

#: ../../netdicom-nodes.rst:73
msgid ""
"AE Title this server: This is the DICOM name that the query (DICOM "
"C-Find) will come from. This may be important if the remote node filters "
"access based on *calling aet*. Normal rules of 16 or fewer letters and "
"numbers, no spaces"
msgstr ""

#: ../../netdicom-nodes.rst:75
msgid "Remote port: Enter the port the remote node is using (eg 104)"
msgstr ""

#: ../../netdicom-nodes.rst:76
msgid ""
"Remote IP address: The IP address of the remote node, for example "
"``192.168.1.100``"
msgstr ""

#: ../../netdicom-nodes.rst:77
msgid ""
"Remote hostname: Alternatively, if your network has a DNS server that can"
" resolve the hostnames, you can enter the hostname instead. If the "
"hostname is entered, it will be used in preference to the IP address, so "
"only enter it if you know it will be resolved."
msgstr ""

#: ../../netdicom-nodes.rst:81
msgid "Now go to the :doc:`netdicom-qr` documentation to learn how to use it."
msgstr ""

#: ../../netdicom-nodes.rst:88
msgid "Troubleshooting: openrem_store.log"
msgstr ""

#: ../../netdicom-nodes.rst:90
msgid ""
"If the default logging settings haven't been changed then there will be a"
" log files to refer to. The default location is within your ``MEDIAROOT``"
" folder:"
msgstr ""

#: ../../netdicom-nodes.rst:93
msgid ""
"This file contains information about each echo and association that is "
"made against the store node, and any objects that are sent to it."
msgstr ""

#: ../../netdicom-nodes.rst:96
msgid ""
"The following is an example of the log for a Philips *dose info* image "
"being received:"
msgstr ""

#~ msgid ""
#~ "You need to configure one or more"
#~ " DICOM Store nodes (Store Service "
#~ "Class Provider, or Store SCP) if "
#~ "you want either of the following:"
#~ msgstr ""

#~ msgid "OpenREM to provide DICOM store functionality"
#~ msgstr ""

#~ msgid ""
#~ "OpenREM to be able to query "
#~ "retrieve a third-party system (PACS "
#~ "or modality), using the OpenREM Store"
#~ " SCP or a third party one, such"
#~ " as Conquest"
#~ msgstr ""

#~ msgid "Native DICOM store node with direct import"
#~ msgstr ""

#~ msgid ""
#~ "Native DICOM store functionality has not"
#~ " proved to be stable over long "
#~ "periods. Therefore we cannot recommend "
#~ "that you use this feature in a "
#~ "production environment. However, please do "
#~ "test it and help us to improve "
#~ "it if you are able to!"
#~ msgstr ""

#~ msgid ""
#~ "If you use supervisord or similar "
#~ "on Linux, then you might not be"
#~ " able to use the web interface "
#~ "or possibly the auto-start service "
#~ "as new threads spawned for the "
#~ "Store SCP tend to get killed. This"
#~ " wouldn't prevent you starting the "
#~ "SCP in a shell. See `Issue #337`_"
#~ msgstr ""

#~ msgid ""
#~ "An OpenREM DICOM Store SCP (service "
#~ "class provider) enables modalities or "
#~ "PACS to send DICOM structured reports"
#~ " and images directly to OpenREM where"
#~ " they are imported into the database."
#~ msgstr ""

#~ msgid ""
#~ "The Store SCP service receives the "
#~ "data, checks whether it is one of"
#~ " the objects that OpenREM can extract"
#~ " data from, and starts an import "
#~ "task if applicable."
#~ msgstr ""

#~ msgid ""
#~ "The object is then left in the "
#~ "``dicom_in`` folder in the ``media`` "
#~ "folder, or it is deleted, depending "
#~ "on the policy set in "
#~ ":doc:`i_deletesettings`."
#~ msgstr ""

#~ msgid ""
#~ "For native DICOM store nodes, you "
#~ "need to open the ``Advanced - "
#~ "test/development use only`` section (see "
#~ "figure 2):"
#~ msgstr ""

#~ msgid "Figure 2: DICOM Store SCP advanced configuration"
#~ msgstr ""

#~ msgid ""
#~ "Control the server using OpenREM: this"
#~ " checkbox will enable OpenREM to "
#~ "create and control the node"
#~ msgstr ""

#~ msgid ""
#~ "Auto-start the server using celery "
#~ "beat: if checked, and if :ref"
#~ ":`celery-beat` is running, then OpenREM "
#~ "will attempt to start the store "
#~ "node whenever it finds it not to"
#~ " be running."
#~ msgstr ""

#~ msgid "Third-party DICOM store node for scripted import to OpenREM"
#~ msgstr ""

#~ msgid ""
#~ "If you are using Conquest or "
#~ "another third-party Store SCP to "
#~ "collect DICOM data, simply fill in "
#~ "the basic details as above without "
#~ "configuring the settings in the "
#~ "``Advanced`` section. This will enable "
#~ "you to request remote hosts send "
#~ "data to your Store SCP in the "
#~ "*retrieve* part of the query-retrieve"
#~ " operation."
#~ msgstr ""

#~ msgid ""
#~ "See :doc:`conquestUbuntu` and "
#~ ":doc:`conquestAsWindowsService` for more information"
#~ " about using Conquest with OpenREM"
#~ msgstr ""

#~ msgid "Controlling native Store SCP nodes"
#~ msgstr ""

#~ msgid ""
#~ "If a native Store SCP node is "
#~ "not running, then a ``Start server`` "
#~ "button will be presented at the "
#~ "bottom right. If it is running, "
#~ "this buttin will change to ``Stop "
#~ "server``, and the ``Delete`` button will"
#~ " become inactive."
#~ msgstr ""

#~ msgid ""
#~ "If the node is configured to be"
#~ " auto-started, and if :ref:`celery-"
#~ "beat` is running, then each minute "
#~ "if the server is not started "
#~ "Celery will try to start the node."
#~ " If you intend to stop the node"
#~ " for some reason, modify the "
#~ "configuration so that auto-start is "
#~ "not selected, then stop the server."
#~ msgstr ""

