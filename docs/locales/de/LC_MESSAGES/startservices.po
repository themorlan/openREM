# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-04 12:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../startservices.rst:3 dfd706d124b14ed9bcce78d5254b0245
msgid "Start all the services"
msgstr ""

#: ../../startservices.rst:6 e3aec450de1e44cc8da0553f8895a439
msgid "Test web server"
msgstr ""

#: ../../startservices.rst:8 2623ceff96a6464eabe6af9cebc23752
msgid "In a shell/command window, move into the openrem folder:"
msgstr ""

#: ../../startservices.rst:10 ../../startservices.rst:86
#: ../../startservices.rst:143 ../../startservices.rst:188
#: 0659c7913a9243ec9f050a02757873e2 8a627a6c71fa4aea91007d2c215fde1a
#: 9b5b43ad3e0d4175ad8a421c366d2279 c5ecfc4d33d4477291e3d3fbfb13be50
msgid "Ubuntu linux: ``/usr/local/lib/python2.7/dist-packages/openrem/``"
msgstr ""

#: ../../startservices.rst:11 ../../startservices.rst:87
#: ../../startservices.rst:144 ../../startservices.rst:189
#: 22bfd7ce9cf14fb490184637da4cecb6 2fec600447794de2b3c3afec9f0d3bbd
#: 6a9bdaa5f98b44a9acba843635108a64 b8a7147d8af84f37b2065c23b3646a2d
msgid "Other linux: ``/usr/lib/python2.7/site-packages/openrem/``"
msgstr ""

#: ../../startservices.rst:12 ../../startservices.rst:88
#: ../../startservices.rst:145 ../../startservices.rst:190
#: 7515988c96804a00821f2d7926ae40ab 8d202b944a044cdc8173e9c724ef51d9
#: b19d05d1fda14b41bc5e2748f80c42ca f96ae1330878479e8c736db6ecd69e38
msgid ""
"Linux virtualenv: ``vitualenvfolder/lib/python2.7/site-"
"packages/openrem/`` (remember to activate the virtualenv)"
msgstr ""

#: ../../startservices.rst:13 ../../startservices.rst:89
#: ../../startservices.rst:146 ../../startservices.rst:191
#: 0f02b8afb27f4ffd8cb46bd441caf555 1573b18654f445b09a932cdaf127965a
#: 3f10e4e2838a4edb9acb801bc04c05bf 461feddcafa34cf39244583339e5efe0
msgid "Windows: ``C:\\Python27\\Lib\\site-packages\\openrem\\``"
msgstr ""

#: ../../startservices.rst:14 ../../startservices.rst:90
#: ../../startservices.rst:147 ../../startservices.rst:192
#: 6e3d2d577ed3483c82dbf39e55a65e30 84616ad9c66f460dbad1e3c549e8c6e3
#: df20e564f0f54e6283a7e12d33ba117f ed7aeba505194593a717af37408a430d
msgid ""
"Windows virtualenv: ``virtualenvfolder\\Lib\\site-packages\\openrem\\`` "
"(remember to activate the virtualenv)"
msgstr ""

#: ../../startservices.rst:17 5ba46613ac7848bdaf07624eecdcd960
msgid "Web access on OpenREM server only"
msgstr ""

#: ../../startservices.rst:19 bceac0e10dd84e6095f1660d586e76b8
msgid "Run the built in web server:"
msgstr ""

#: ../../startservices.rst:25 e131ab75257b4141ba1d97f84276f7d9
msgid ""
"In a web browser on the same computer, go to http://localhost:8000/ - you"
" should now see the message about creating users. For full functionality "
"start the `Celery task queue`_ before moving on to `Configure the "
"settings`_."
msgstr ""

#: ../../startservices.rst:29 822218f5a10c402fbe827240bcb8ebde
msgid "Web access on other computers"
msgstr ""

#: ../../startservices.rst:31 04c9c107566345a7b81c96aaf6b94d07
msgid ""
"The built-in webserver only provides a service on the computer OpenREM is"
" installed on by default (it's only there really for testing). To view "
"the OpenREM interface on another computer, you need to modify the "
"``runserver`` command:"
msgstr ""

#: ../../startservices.rst:38 c6fe28fbc70c4b4989f7c06a91e643c2
msgid ""
"This will enable the web service to be available from other computers on "
"the network. If your server has several network cards and you want to "
"restrict it to one, then you can use a real address rather than "
"``0.0.0.0``. Likewise you can specify the port (here it is ``8000``)."
msgstr ""

#: ../../startservices.rst:42 bb312a25c8b0452cb4c5fabaed84fc7d
msgid ""
"In a web browser on a different computer on the same network, go to "
"http://192.168.1.10:8000/ (**changing the IP address** to the one you are"
" running the server on) and you should see the OpenREM interface and the "
"message about creating users. For full functionality start the `Celery "
"task queue`_ before moving on to `Configure the settings`_."
msgstr ""

#: ../../startservices.rst:48 00d730ba5e05415b907b672ee1d790df
msgid ""
"Why are we using the ``--insecure`` option? With ``DEBUG`` mode set to "
"``True`` the test web server would serve up the static files. In this "
"release, ``DEBUG`` mode is set to ``False``, which prevents the test web "
"server serving those files. The ``--insecure`` option allows them to be "
"served again."
msgstr ""

#: ../../startservices.rst:56 9f4309c4c73f4b0c877c26d7168ad0da
msgid "Celery task queue"
msgstr ""

#: ../../startservices.rst:58 1051663367b942c4bebb46a8c4fa37a7
msgid ""
"Celery will have been automatically installed with OpenREM, and along "
"with RabbitMQ allows for asynchronous task processing for imports, "
"exports and DICOM networking tasks."
msgstr ""

#: ../../startservices.rst:63 44e5a580ea0e47c0b7f15fc01cac0905
msgid ""
"Celery needs to be able to write to the place where the Celery logs and "
"pid file are to be stored, so make sure:"
msgstr ""

#: ../../startservices.rst:65 672b54013b5b44b0bad51e26944d6aeb
msgid ""
"the folder exists (the suggestion below is to create a folder in the "
"``MEDIA_ROOT`` location)"
msgstr ""

#: ../../startservices.rst:66 b8d8aa56a162464c91758a9d47fe050c
msgid "the user that starts Celery can write to that folder"
msgstr ""

#: ../../startservices.rst:68 45507f89d8104042b3c827b16f6bed01
msgid ""
"You can put the folder wherever you like, for example you might like to "
"create a ``/var/log/openrem/`` folder on a linux system."
msgstr ""

#: ../../startservices.rst:71 6572d6d587524d17a732390b0a1b43ec
msgid ""
"If you are using the built-in `Test web server`_ then Celery and the "
"webserver will be running as your user. If you are running a production "
"webserver, such as Apache or nginx on linux, then the user that runs "
"those daemons will need to be able to write to the ``MEDIA_ROOT`` and the"
" Celery log files folder. In this case, you need to change the ownership "
"of the folders and change to the right user before running Celery. On "
"Ubuntu:"
msgstr ""

#: ../../startservices.rst:82 ba4937efff654919b35948dba331c40c
msgid "Now start celery..."
msgstr ""

#: ../../startservices.rst:84 ../../startservices.rst:141
#: 152855916fbb4df4a648dd457ccd2a31 a4d0d6afba9c4894813227fa214b7169
msgid "Move into the openrem folder:"
msgstr ""

#: ../../startservices.rst:92 ../../startservices.rst:155
#: 011d429198064fa18fad646c6413fa87 5890578d59d948c5aac6ab2fe0bee692
msgid "Linux - ``\\`` is the line continuation character:"
msgstr ""

#: ../../startservices.rst:99 0115acb1e2034646b3c2cb71e7b5d00c
msgid ""
"Windows - ``celery multi`` doesn't work on Windows, and ``^`` is the "
"continuation character:"
msgstr ""

#: ../../startservices.rst:109 cb553d99e0464f8285d418598f16e7f9
msgid "Celery concurrency"
msgstr ""

#: ../../startservices.rst:111 fcc10c4ab02f479fa94d4fc175a980ce
msgid ""
"Set the number of workers (concurrency, ``-c``) according to how many "
"processor cores you have available. The more you have, the more processes"
" (imports, exports, query-retrieve operations etc) can take place "
"simultaneously. However, each extra worker uses extra memory and if you "
"have too many they will be competing for CPU resources too."
msgstr ""

#: ../../startservices.rst:115 6e14a1f90df54fa18f74583a6878b078
msgid "Problems with Celery 4 on Windows"
msgstr ""

#: ../../startservices.rst:117 2fc19dc068054c5dbbadba57f5447b70
msgid ""
"Full support for Celery on Windows was dropped with version 4 due to lack"
" of Windows based developers. Therefore for Windows the instructions fix "
"Celery at version ``3.1.25`` to retain full functionality."
msgstr ""

#: ../../startservices.rst:120 b59f1e78284644a487a8077dfef6b609
msgid "To stop the celery queues in Linux:"
msgstr ""

#: ../../startservices.rst:126 165434320c1a429e9355446afe26a774
msgid "For Windows, just press ``Ctrl+c``"
msgstr ""

#: ../../startservices.rst:128 38d34c3bd9164f12a8f06641ee78d4be
msgid ""
"You will need to do this twice if there are running tasks you wish to "
"kill."
msgstr ""

#: ../../startservices.rst:130 ../../startservices.rst:169
#: 32d51ed0707e45198f387c0437e1181d 5e5b68e9dc9e4c0b9ad4dd53049d2d2c
msgid "For production use, see `Daemonising Celery`_ below."
msgstr ""

#: ../../startservices.rst:135 71a9031f0a98472998ba056fffebfafe
msgid "Celery task management: Flower"
msgstr ""

#: ../../startservices.rst:137 e9261d5cd0f344b88eaa89d0b9750bb7
msgid ""
"Flower will have been automatically installed with OpenREM and enables "
"monitoring and management of Celery tasks."
msgstr ""

#: ../../startservices.rst:139 35edf798fe1d4a72954ed65601bccfd7
msgid ""
"You should start Flower with the same user that you started Celery with, "
"and put the log file in the same place too."
msgstr ""

#: ../../startservices.rst:149 1040a6f934c04df5808546d5a9f14124
msgid ""
"If you need to change the default port from 5555 then you need to make "
"the same change in ``openremproject\\local_settings.py`` to add/modify "
"the line ``FLOWER_PORT = 5555``"
msgstr ""

#: ../../startservices.rst:152 14179dda7a2e4e7da614101b216c777a
msgid ""
"If you wish to be able to use the Flower management interface "
"independently of OpenREM, then omit the ``--address`` part of the "
"command. Flower will then be available from any PC on the network at "
"http://yourdoseservernameorIP:5555/"
msgstr ""

#: ../../startservices.rst:162 2fff70269d5a41789e226939561a3cae
msgid "Windows - ``^`` is the line continuation character:"
msgstr ""

#: ../../startservices.rst:174 c28945bdb29c494da178486a696cf96b
msgid "Celery periodic tasks: beat"
msgstr ""

#: ../../startservices.rst:178 edeff9cf68d8407a9504ae7d06709a68
msgid ""
"Celery beat is only required if you are using the :ref:`nativestore`. "
"Please read the warnings there before deciding if you need to run Celery "
"beat. At the current time, using a third party DICOM store service is "
"recommended for most users. See the :ref:`configure_third_party_DICOM` "
"documentation for more details"
msgstr ""

#: ../../startservices.rst:182 0cbd36dcf5824af8a797a5a5042446b6
msgid ""
"Celery beat is a scheduler. If it is running, then every 60 seconds a "
"task is run to check if any of the DICOM Store SCP nodes are set to "
"``keep_alive``, and if they are, it tries to verify they are running with"
" a DICOM echo. If this is not successful, then the Store SCP is started."
msgstr ""

#: ../../startservices.rst:186 5c4eb2f55c374ca686a9aa1e05dfff97
msgid "To run celery beat, open a new shell and move into the openrem folder:"
msgstr ""

#: ../../startservices.rst:194 878931a84ef14e7996d331fac6e5108f
msgid "Linux::"
msgstr ""

#: ../../startservices.rst:200 071d7868b91e4a75a8f48bcdbd737b7a
msgid "Windows::"
msgstr ""

#: ../../startservices.rst:206 3e55e0d60a69459c80745366b1df7413
msgid "For production use, see `Daemonising Celery`_ below"
msgstr ""

#: ../../startservices.rst:208 5c1995d293764d82aca34ef2faf85ec7
msgid ""
"As with starting the Celery workers, the folder that the pid, log and for"
" beat, schedule files are to be written **must already exist** and the "
"user starting Celery beat must be able write to that folder."
msgstr ""

#: ../../startservices.rst:211 75ce556fe3f44c0a885f3a239ab16d67
msgid "To stop Celery beat, just press ``Ctrl+c``"
msgstr ""

#: ../../startservices.rst:216 8bcf8bfc57e34d58be89a6586abf9145
msgid "Configure the settings"
msgstr ""

#: ../../startservices.rst:219 994f61f774404cb7914fa466de511906
msgid ""
"Follow the link presented on the front page to get to the user and group "
"administration."
msgstr ""

#: ../../startservices.rst:229 c939af3968af4e3db524b2e0f57b0700
msgid ""
"After the first users are configured, this link will no longer be "
"presented and instead you can go to ``Config -> Users``."
msgstr ""

#: ../../startservices.rst:231 82d767249ad543b0a6b4392d4c001533
msgid ""
"You will need the superuser username and password you created just after "
"creating the database. The groups are"
msgstr ""

#: ../../startservices.rst:233 dd602e9db71b4ec1996c2bfd9afd2a30
msgid "``viewgroup`` can browse the data only"
msgstr ""

#: ../../startservices.rst:234 a014c99a262e441ea7424ccaee9d5d94
msgid ""
"``importsizegroup`` can use the csv import facility to add patient height"
" and weight information"
msgstr ""

#: ../../startservices.rst:235 2e79ca902baa47d4a1fa34ea2a5d78ac
msgid ""
"``importqrgroup`` can use the DICOM query-retrieve facility to pull in "
"studies, as long as they are pre-configured"
msgstr ""

#: ../../startservices.rst:236 de04cc8813ad4e92987ab22c36aa0820
msgid "``exportgroup`` can view and export data to a spreadsheet"
msgstr ""

#: ../../startservices.rst:237 02aa0bd28ff4452c8f77ed24b2734e0b
msgid ""
"``pidgroup`` can search using patient names and IDs depending on "
"settings, and export with patient names and IDs if they are also a member"
" of the ``exportgroup``"
msgstr ""

#: ../../startservices.rst:239 8a78d457b7864b9bb472dd470c0fa8af
msgid ""
"``admingroup`` can delete studies, configure DICOM Store/QR settings, "
"configure DICOM keep or delete settings, configure patient ID settings, "
"and abort and delete patient size import jobs. *Members of the admingroup"
" no longer inherit the other groups permissions.*"
msgstr ""

#: ../../startservices.rst:247 f74055d87d384d0d97518582c46455a8
msgid ""
"In addition to adding users to these groups, you may like to grant a "
"second user ``superuser`` and ``staff`` status so that there are at least"
" two people who can manage the users"
msgstr ""

#: ../../startservices.rst:249 5a3d3e251eff41b8988f9daa561f7714
msgid "Return to the OpenREM interface (click on ``View site`` at the top right)"
msgstr ""

#: ../../startservices.rst:255 28bc434a264a420c9f5a3da902feeb63
msgid ""
"Follow the link to see more information about how you want OpenREM to "
"identify non-patient exposures, such as QA. See "
":doc:`i_not_patient_indicator`."
msgstr ""

#: ../../startservices.rst:257 e533f07ac5ba48d9adee6ab5afd397a2
msgid ""
"Go to ``Config -> DICOM object delete settings`` and configure "
"appropriately (see :doc:`i_deletesettings`)"
msgstr ""

#: ../../startservices.rst:258 0062538fb4b74cb5b935af4dad74bef9
msgid ""
"Go to ``Config -> Patient ID settings`` and configure appropriately (see "
":doc:`patientid`)"
msgstr ""

#: ../../startservices.rst:259 a7878ba14e3549b4aeb920ebf54edb90
msgid ""
"If you want to use OpenREM as a DICOM store, or to use OpenREM to query "
"remote systems, go to ``Config -> Dicom network configuration``. For more"
" information go to :doc:`import`."
msgstr ""

#: ../../startservices.rst:261 4aedea158451474f9a250d3da8ae319a
msgid ""
"With data in the system, you will want to go to ``Config -> View and edit"
" display names`` and customise the display names. An established system "
"will have several entries for each device, from each time the software "
"version, station name or other elements changes. See "
":doc:`i_displaynames` for more information"
msgstr ""

#: ../../startservices.rst:268 0ac57c35dc5b402091b386f2c876cd7a
msgid "Start using it - add some data!"
msgstr ""

#: ../../startservices.rst:270 4caa92cf8f5743e890c89099fc1f1dc3
msgid "See :doc:`import`"
msgstr ""

#: ../../startservices.rst:274 9cff4aef9b894453912106e279b4de15
msgid "Further instructions"
msgstr ""

#: ../../startservices.rst:277 fe8c23d4bc2d44feb4e1bf86d3b0c9d6
msgid "Daemonising Celery"
msgstr ""

#: ../../startservices.rst:279 25fde2a2f054449cb5a7f40f4f89765d
msgid ""
"In a production environment, Celery will need to start automatically and "
"not depend on a particular user being logged in. Therefore, much like the"
" webserver, it will need to be daemonised."
msgstr ""

