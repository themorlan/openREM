# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-05 17:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../release-1.0.0.rst:3
msgid "OpenREM Release Notes version 1.0.0"
msgstr ""

#: ../../release-1.0.0.rst:5
msgid "**Document not ready for translation**"
msgstr ""

#: ../../release-1.0.0.rst:9
msgid "Headline changes"
msgstr ""

#: ../../release-1.0.0.rst:11
msgid "Python 3"
msgstr ""

#: ../../release-1.0.0.rst:12
msgid "Django 2.2"
msgstr ""

#: ../../release-1.0.0.rst:13
msgid "Docker or direct install on Windows and Linux"
msgstr ""

#: ../../release-1.0.0.rst:14
msgid "Celery, Flower and RabbitMQ removed from requirements"
msgstr ""

#: ../../release-1.0.0.rst:16
msgid "Performing physician added to standard fluoroscopy exports (:issue:`840`)"
msgstr ""

#: ../../release-1.0.0.rst:17
msgid ""
"Station name checked at series level only, option to check at study level"
" only instead (:issue:`772`)"
msgstr ""

#: ../../release-1.0.0.rst:20
msgid "Upgrade from 0.10.0"
msgstr ""

#: ../../release-1.0.0.rst:22
msgid "Review the :doc:`installation` doc to find the upgrade options"
msgstr ""

#: ../../release-1.0.0.rst:25
msgid "Upgrade from an older version"
msgstr ""

#: ../../release-1.0.0.rst:27
msgid ":doc:`upgrade_previous_0.10.0`"
msgstr ""

#~ msgid "Upgrade to OpenREM 1.0.0"
#~ msgstr ""

#~ msgid "Docker"
#~ msgstr ""

#~ msgid "Upgrade preparation"
#~ msgstr ""

#~ msgid "These instructions assume you are upgrading from 0.10.0."
#~ msgstr ""

#~ msgid ""
#~ "**Upgrades from 0.9.1 or earlier should"
#~ " review** :doc:`upgrade_previous_0.10.0`. -- "
#~ "needs changing"
#~ msgstr ""

#~ msgid "Upgrade process from a PostgresQL database"
#~ msgstr ""

#~ msgid "Establish existing database details"
#~ msgstr ""

#~ msgid ""
#~ "Review the current ``local_settings.py`` for"
#~ " the database settings and location "
#~ "of the ``MEDIA_ROOT`` folder. The file"
#~ " is in:"
#~ msgstr ""

#~ msgid ""
#~ "Ubuntu linux: ``/usr/local/lib/python2.7/dist-"
#~ "packages/openrem/openremproject/local_settings.py``"
#~ msgstr ""

#~ msgid ""
#~ "Other linux: ``/usr/lib/python2.7/site-"
#~ "packages/openrem/openremproject/local_settings.py``"
#~ msgstr ""

#~ msgid ""
#~ "Linux virtualenv: ``vitualenvfolder/lib/python2.7/site-"
#~ "packages/openrem/openremproject/local_settings.py``"
#~ msgstr ""

#~ msgid ""
#~ "Windows: ``C:\\Python27\\Lib\\site-"
#~ "packages\\openrem\\openremproject\\local_settings.py``"
#~ msgstr ""

#~ msgid ""
#~ "Windows virtualenv: ``virtualenvfolder\\Lib\\site-"
#~ "packages\\openrem\\openremproject\\local_settings.py``"
#~ msgstr ""

#~ msgid "Export the database"
#~ msgstr ""

#~ msgid "Open a command line window"
#~ msgstr ""

#~ msgid "Windows: go to Postgres bin folder, for example:"
#~ msgstr ""

#~ msgid "Dump the database:"
#~ msgstr ""

#~ msgid ""
#~ "Use the username (``-U openremuser``) "
#~ "and database name (``-d openremdb``) "
#~ "from ``local_settings.py``"
#~ msgstr ""

#~ msgid "Use the password from ``local_settings.py`` when prompted"
#~ msgstr ""

#~ msgid "For linux, the command is ``pg_dump`` (no ``.exe``)"
#~ msgstr ""

#~ msgid "Set the path to somewhere suitable to dump the exported database file"
#~ msgstr ""

#~ msgid "Set up the new installation"
#~ msgstr ""

#~ msgid "Install Docker"
#~ msgstr ""

#~ msgid ""
#~ "Download and extract "
#~ "https://bitbucket.org/openrem/docker/get/develop.zip and "
#~ "open a shell (command window) in "
#~ "the new folder"
#~ msgstr ""

#~ msgid ""
#~ "Customise variables in ``.env.prod`` and "
#~ "in the ``orthanc_1`` section in "
#~ "``docker-compose.yml`` as necessary. A full"
#~ " description of the options are found"
#~ " in:"
#~ msgstr ""

#~ msgid "Start the containers with:"
#~ msgstr ""

#~ msgid ""
#~ "Copy the database backup to the "
#~ "postgres docker container and import it."
#~ " If you have changed the database "
#~ "variables, ensure that:"
#~ msgstr ""

#~ msgid ""
#~ "the database user (``-U openremuser``) "
#~ "matches ``POSTGRES_USER`` in ``.env.prod``"
#~ msgstr ""

#~ msgid ""
#~ "the database name (``-d openrem_prod``) "
#~ "matches ``POSTGRES_DB`` in ``.env.prod``"
#~ msgstr ""

#~ msgid ""
#~ "They don't have to match the old"
#~ " database settings. The filename in "
#~ "both commands (``openremdump.bak``) should "
#~ "match your backup filename."
#~ msgstr ""

#~ msgid "It is normal to get an error about the public schema, for example:"
#~ msgstr ""

#~ msgid ""
#~ "Rename the 0.10 upgrade migration file,"
#~ " migrate the database (the steps and"
#~ " fakes are required as it is "
#~ "not a new database), and create "
#~ "the static files:"
#~ msgstr ""

#~ msgid "Generate translation binary files"
#~ msgstr ""

#~ msgid ""
#~ "Copy in any existing skin dose map"
#~ " pickle files from your existing "
#~ "``MEDIA_ROOT/skin_maps`` folder (optional, they "
#~ "can be calculated again):"
#~ msgstr ""

#~ msgid "The new OpenREM installation should now be ready to be used."
#~ msgstr ""

#~ msgid "Upgrading an OpenREM server with no internet access"
#~ msgstr ""

#~ msgid ""
#~ "Follow the instructions found at :doc"
#~ ":`upgrade-offline`, before returning here "
#~ "to update the configuration, migrate the"
#~ " database and complete the upgrade."
#~ msgstr ""

#~ msgid "Upgrading an OpenREM server that uses a different database"
#~ msgstr ""

#~ msgid "Upgrading without using Docker - linux only"
#~ msgstr ""

#~ msgid ""
#~ "Upgrading without using Docker is not"
#~ " recommended, and not supported on "
#~ "Windows. Instructions are only provided "
#~ "for Linux and assume a configuration "
#~ "similar to the 'One page complete "
#~ "Ubuntu install' provided with release "
#~ "0.8.1 and later."
#~ msgstr ""

#~ msgid "Preparation"
#~ msgstr ""

#~ msgid "Back up the database:"
#~ msgstr ""

#~ msgid "Stop any Celery workers, Flower and Gunicorn, disable DICOM Store SCP:"
#~ msgstr ""

#~ msgid "Install Python 3.8 and create a new virtualenv:"
#~ msgstr ""

#~ msgid "Install the new version of OpenREM"
#~ msgstr ""

#~ msgid "Update the local_settings.py file"
#~ msgstr ""

#~ msgid "Remove the first line ``LOCAL_SETTINGS = True``"
#~ msgstr ""

#~ msgid "Change second line to ``from .settings import *``"
#~ msgstr ""

#~ msgid ""
#~ "Compare file to local_settings.py.example to"
#~ " see if there are other sections "
#~ "that should be updated"
#~ msgstr ""

#~ msgid "Migrate the database"
#~ msgstr ""

#~ msgid "In a shell/command window, move into the ``openrem`` folder:"
#~ msgstr ""

#~ msgid "Prepare the migrations folder:"
#~ msgstr ""

#~ msgid ""
#~ "Delete everything except ``__init__.py`` and"
#~ " ``0001_initial.py.1-0-upgrade`` in "
#~ "``remapp/migrations``"
#~ msgstr ""

#~ msgid "Rename ``0001_initial.py.1-0-upgrade`` to ``0001_initial.py``"
#~ msgstr ""

#~ msgid "Migrate the database:"
#~ msgstr ""

#~ msgid "Update static files"
#~ msgstr ""

#~ msgid "Virtual directory users"
#~ msgstr ""

#~ msgid ""
#~ "If you are running your website in"
#~ " a virtual directory, you also have"
#~ " to update the reverse.js file. To"
#~ " get the file in the correct "
#~ "path, take care that you insert "
#~ "just after the declaration of "
#~ "``STATIC_ROOT`` the following line in "
#~ "your ``local_settings.py`` (see also the "
#~ "sample ``local_settings.py.example``):"
#~ msgstr ""

#~ msgid "To update the reverse.js file execute the following command:"
#~ msgstr ""

#~ msgid "See  :doc:`virtual_directory` for more details."
#~ msgstr ""

#~ msgid "Update all the services configurations"
#~ msgstr ""

#~ msgid "Edit the Gunicorn systemd file ``WorkingDirectory`` and ``ExecStart``:"
#~ msgstr ""

#~ msgid "Edit the Celery configuration file ``CELERY_BIN``:"
#~ msgstr ""

#~ msgid "Edit the Celery systemd file ``WorkingDirectory``:"
#~ msgstr ""

#~ msgid "Edit the Flower systemd file ``WorkingDirectory``:"
#~ msgstr ""

#~ msgid "Reload systemd and restart the services"
#~ msgstr ""

