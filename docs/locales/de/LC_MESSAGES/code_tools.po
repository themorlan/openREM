# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2020, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-04 12:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../code_tools.rst:3 05817d71955c4b94a94c9ab1ecbb1c88
msgid "Tools and helper modules"
msgstr ""

#: ../../code_tools.rst:6 8a074e84ffb64cd68d1b364c70f79f0c
msgid "OpenREM settings"
msgstr ""

#: ../../code_tools.rst:7 b9a11ca457844a41a6b9d4937407de7b
msgid ""
"Administrative module to define the name of the project and to add it to "
"the Python path"
msgstr ""

#: ../../code_tools.rst:15 2f4d074026cd4d8d82dd84db2f8f4639
msgid "Get values"
msgstr ""

#: ../../code_tools.rst:16 54f2c8c8f2f840ccbb7d4927c7032037
msgid ""
"Tiny modules to reduce repetition in the main code when extracting "
"information from DICOM headers using pydicom."
msgstr ""

#: c3a8366f123a43308ccc7712de842077 of remapp.tools.get_values.get_value_kw:1
msgid "Get DICOM value by keyword reference."
msgstr ""

#: 093836f1abf341aeab4bbf8b1013ce49 1cf89d88f27e426b81dfb844e3529241
#: 24fe693da25f4fa0ad6826293bfe7d20 256b781bd36445c3a74f95f32a93adcc
#: 3023eaf013ca4858ae717ad8f3b415b7 321d5268784f46f1a925952b3a6ae054
#: 50156caad67e4b7faf17a0c6964eba46 54e36d3127d04f5b89dddcc3de623eda
#: 5fba89e4001540f99a2e14cd3365cef2 6924b4f788e64382aa7366c90d127f27
#: 6d53513cddc8474b955791313c6f0c6d 92977784a7e24dfda16b72254c775677
#: a6480dc93c3c4974aefb47ad0e7e10ac ab63bdc60f884e849d9de7353c201693
#: e50d9bf29ffa4956b2de47aebcb2308d ea04a1b0bb1144439229c0242ca7e79f
#: ffde6ac1832544069af8b6c30c1c5964 of remapp.tools.check_uid.check_uid
#: remapp.tools.check_uid.record_sop_instance_uid
#: remapp.tools.dcmdatetime.get_date remapp.tools.dcmdatetime.get_date_time
#: remapp.tools.dcmdatetime.get_time remapp.tools.dcmdatetime.make_date
#: remapp.tools.dcmdatetime.make_date_time
#: remapp.tools.dcmdatetime.make_dcm_date_range
#: remapp.tools.dcmdatetime.make_dcm_time
#: remapp.tools.dcmdatetime.make_dcm_time_range
#: remapp.tools.dcmdatetime.make_time remapp.tools.get_values.get_or_create_cid
#: remapp.tools.get_values.get_seq_code_meaning
#: remapp.tools.get_values.get_seq_code_value
#: remapp.tools.get_values.get_value_kw remapp.tools.get_values.get_value_num
#: remapp.tools.not_patient_indicators.get_not_pt
msgid "Parameters"
msgstr ""

#: 1735c9e131434a49a3b2b66f0982596b 74510bc4e1df4fdca658923de2e9dd80
#: d257a5507842408cbdbe84bf9e0e36ce fe72bc9212024b31a5bd021a55cc51f2 of
#: remapp.tools.dcmdatetime.get_date:3 remapp.tools.dcmdatetime.get_date_time:3
#: remapp.tools.dcmdatetime.get_time:3 remapp.tools.get_values.get_value_kw:3
msgid "DICOM keyword, no spaces or plural as per dictionary."
msgstr ""

#: 5e89ba1867584d9187d641c8c39d8b85 5ecd48ed33b44469b36262fff369393d
#: 7579e7b60be54a73b14988877f8281be a83b59e30afa46d19a1023412f3e008b
#: dcfd08506c21405faabb3b1e74ff7ec1 of remapp.tools.dcmdatetime.get_date:5
#: remapp.tools.dcmdatetime.get_date_time:5 remapp.tools.dcmdatetime.get_time:5
#: remapp.tools.get_values.get_value_kw:5
#: remapp.tools.get_values.get_value_num:8
msgid "The DICOM dataset containing the tag."
msgstr ""

#: 035638c6bea5476083796f8741c7ba1c 0bca79d187ef475fa0a580b557927211
#: 17abf7e79be44265b3d83517192fe080 1a91eb44b74b453f93eb9d05a7e5648c
#: 22a120085de64ddeaea4d344947d2c18 49cf8c2d84ff4d27a3b2fbed984454bb
#: 5aa29251a40046c7be89c74b32e80034 63ef66d97cba4b6293abd60c67424388
#: 801ac3f5e7124d879d4c9d4287af349c 8feaf90cf6fe4d0d87b4f40a145add27
#: a393f84531424fcd9064bde7459f4d2e a902cf5cc56d4a518640b3abd2e9297f
#: a9e6de33a22f40a1b63c2be6bae8695a d39a7e8f2a9f48f5880b9fd6f4ca993e
#: f143c313d89d4290b271d2abd21f52c4 fae4d610e06a4bea9457fcbbc5987a71
#: ff158300a2c1489e806f1e7e5c01b9eb of remapp.tools.check_uid.check_uid
#: remapp.tools.check_uid.record_sop_instance_uid
#: remapp.tools.dcmdatetime.get_date remapp.tools.dcmdatetime.get_date_time
#: remapp.tools.dcmdatetime.get_time remapp.tools.dcmdatetime.make_date
#: remapp.tools.dcmdatetime.make_date_time
#: remapp.tools.dcmdatetime.make_dcm_date_range
#: remapp.tools.dcmdatetime.make_dcm_time
#: remapp.tools.dcmdatetime.make_dcm_time_range
#: remapp.tools.dcmdatetime.make_time remapp.tools.get_values.get_or_create_cid
#: remapp.tools.get_values.get_seq_code_meaning
#: remapp.tools.get_values.get_seq_code_value
#: remapp.tools.get_values.get_value_kw remapp.tools.get_values.get_value_num
#: remapp.tools.not_patient_indicators.get_not_pt
msgid "Returns"
msgstr ""

#: 6a6a271f0de8458d846352f1294f4031 b2a86b38591f4536b234cba88bac8a64 of
#: remapp.tools.get_values.get_value_kw:7
#: remapp.tools.get_values.get_value_num:10
msgid "str. -- value"
msgstr ""

#: 2ec03d3646124dcda8f8e577b8e1b3a4 of remapp.tools.get_values.get_value_num:1
msgid "Get DICOM value by tag group and element number."
msgstr ""

#: 475050814b204f74940432cfed960f5b of remapp.tools.get_values.get_value_num:3
msgid ""
"Always use get_value_kw by preference for readability. This module can be"
" required when reading private elements."
msgstr ""

#: 86b1c05432544566b7832debbeb7179c of remapp.tools.get_values.get_value_num:6
msgid "DICOM group and element number as a single hexadecimal number (prefix 0x)."
msgstr ""

#: 920e6033dab54a8baefb3ee6c141497d of
#: remapp.tools.get_values.get_seq_code_value:1
msgid "From a DICOM sequence, get the code value."
msgstr ""

#: 2dfd6c7be32d4705ac5a71e2655581bd db18725c84e04297ab8531ac4dcb9323 of
#: remapp.tools.get_values.get_seq_code_meaning:3
#: remapp.tools.get_values.get_seq_code_value:3
msgid "DICOM sequence name."
msgstr ""

#: 0f8506aa940f4badb5b2c4a70194cf1f a759e35578d44d0ab53604c273a92138 of
#: remapp.tools.get_values.get_seq_code_meaning:5
#: remapp.tools.get_values.get_seq_code_value:5
msgid "The DICOM dataset containing the sequence."
msgstr ""

#: dd4306b4db7a4053bde919451c1ffaf7 of
#: remapp.tools.get_values.get_seq_code_value:7
msgid "int. -- code value"
msgstr ""

#: 9d2da84f1aaf4dd6ac86ab37b94816e2 of
#: remapp.tools.get_values.get_seq_code_meaning:1
msgid "From a DICOM sequence, get the code meaning."
msgstr ""

#: 5faa45e784c94d3ead255de1843dd74c of
#: remapp.tools.get_values.get_seq_code_meaning:7
msgid "str. -- code meaning"
msgstr ""

#: 5053d8e58a434ea3a0e1d3d3f1d4de5e of
#: remapp.tools.get_values.get_or_create_cid:1
msgid ""
"Create a code_value code_meaning pair entry in the ContextID table if it "
"doesn't already exist."
msgstr ""

#: 1b9782ad762c4cf3b2ef713313076f33 of
#: remapp.tools.get_values.get_or_create_cid:4
msgid "Code value as defined in the DICOM standard part 16"
msgstr ""

#: 985ddabe7d504371b9597f4a92b58313 of
#: remapp.tools.get_values.get_or_create_cid:6
msgid "Code meaning as defined in the DICOM standard part 16"
msgstr ""

#: 5d8cb3ae93e244138ebc80dd33b0d411 of
#: remapp.tools.get_values.get_or_create_cid:8
msgid "ContextID entry for code value passed"
msgstr ""

#: 98997e2a17a64fc180ebc9974bffac7f of
#: remapp.tools.get_values.return_for_export:1
msgid ""
"Prevent errors due to missing data in models :param model: database table"
" :param field: database field :return: value or None"
msgstr ""

#: b7fb5ee38f9241b8a277e23a65a41894 of
#: remapp.tools.get_values.test_numeric_value:1
msgid ""
"Tests if string can be converted to a float. If it can, return it :param "
"string_number: string to test if is a number :return: string if number, "
"nothing otherwise"
msgstr ""

#: ab8fcb29bf8c44efacf65b39beffc4b1 of remapp.tools.get_values.safe_strings:1
msgid ""
"Function to encode non-ASCII characters correctly. Probably not required "
"any longer, but leaving in for now. :param string: String to encode "
":param char_set: Character set used by DICOM file :return: Encoded string"
msgstr ""

#: d60f3f4913d34c30a4e56c1f2103d7e6 of remapp.tools.get_values.list_to_string:1
msgid ""
"Turn multivalue names into a single string for correct encoding and "
"pretty reproduction :param dicom_value: returned DICOM value, usually a "
"name field. Might be single (string) or multivalue (list) :return: string"
" of name(s)"
msgstr ""

#: 6d231b567f9b461db425d7cc2354094e of
#: remapp.tools.get_values.get_keys_by_value:1
msgid ""
"Get a list of keys from a dictionary which have the given value :param "
"dict_of_elements: a dictionary of elements :param value_to_find: the "
"value to look for in the dictionary :return: list of key names matching "
"the given value"
msgstr ""

#: ../../code_tools.rst:23 235c6f3e73134260a88c382aa6ba5af4
msgid "Check if UID exists"
msgstr ""

#: ../../code_tools.rst:24 d011780f2aae43819912753f45f249f9
msgid "Small module to check if UID already exists in the database."
msgstr ""

#: 5d90b4b01d8c4e928b04716c47d7d162 of remapp.tools.check_uid.check_uid:1
msgid "Check if UID already exists in database."
msgstr ""

#: 13784eca83ca4ae1a29d9c9f6162327d of remapp.tools.check_uid.check_uid:3
msgid "Study UID."
msgstr ""

#: 3f0a757e35f5433789e67a2198ab8e47 of remapp.tools.check_uid.check_uid:5
msgid "1 if it does exist, 0 otherwise"
msgstr ""

#: f621fc5521784c1ebe08d6997ef4a818 of
#: remapp.tools.check_uid.record_sop_instance_uid:1
msgid ""
"Record the object's SOP Instance UID so we can ignore it next time. If an"
" object does need to be imported again, the original one needs to be "
"deleted first."
msgstr ""

#: 1f657c4249b94e5c91e84e2c52032711 of
#: remapp.tools.check_uid.record_sop_instance_uid:4
msgid "GeneralStudyModuleAttr database object"
msgstr ""

#: c10d255702894e4eb5052f19f66b4c6f of
#: remapp.tools.check_uid.record_sop_instance_uid:5
msgid "SOP Instance UID of object being imported"
msgstr ""

#: ../../code_tools.rst:30 12c7a138f16f4e18a9cc4d1961c140a2
msgid "DICOM time and date values"
msgstr ""

#: ../../code_tools.rst:31 909d69373898419a8c71f50cdfd34327
msgid "Module to convert betweeen DICOM and Python dates and times."
msgstr ""

#: 27e08d2a44da4d9da9e8a1ebac1ca0b4 of remapp.tools.dcmdatetime.get_date:1
msgid "Get DICOM date string and return Python date."
msgstr ""

#: 5f4da5d535774b8486d72cad4c359f4e fbbf8cc9f97d448bb4d2806580d2189d of
#: remapp.tools.dcmdatetime.get_date:7 remapp.tools.dcmdatetime.make_date:5
msgid "Python date value"
msgstr ""

#: 55df3c5d34dd4f64a0022ed20e97da20 of remapp.tools.dcmdatetime.get_time:1
msgid "Get DICOM time string and return Python time."
msgstr ""

#: d98b63ec5edc42e4b36e990cbcb2e34a of remapp.tools.dcmdatetime.get_time:7
msgid "python time value"
msgstr ""

#: ba6204b24b78472f9fa424ed7ec22dd5 of remapp.tools.dcmdatetime.get_date_time:1
msgid "Get DICOM date time string and return Python date time."
msgstr ""

#: 637673bd166d4648ab707265de2fbeaa 6707fb231b734939b49e089d6adde8de of
#: remapp.tools.dcmdatetime.get_date_time:7
#: remapp.tools.dcmdatetime.make_date_time:5
msgid "Python date time value"
msgstr ""

#: f651803f529c4d11801994b50076ae6c of remapp.tools.dcmdatetime.make_date:1
msgid "Given a DICOM date, return a Python date."
msgstr ""

#: 6570b4df2c394e30998e0a041d6087cc of remapp.tools.dcmdatetime.make_date:3
msgid "DICOM style date."
msgstr ""

#: bc581446933948fbadaf6d94bd5d2d18 of remapp.tools.dcmdatetime.make_time:1
msgid "Given a DICOM time, return a Python time."
msgstr ""

#: f7a1377d4e9641418541bda9d1c8f783 of remapp.tools.dcmdatetime.make_time:3
msgid "DICOM style time."
msgstr ""

#: 508e1bb33364463b8f4e9edeb339e34d of remapp.tools.dcmdatetime.make_time:5
msgid "Python time value"
msgstr ""

#: 29cec004de9a4709af1a7b6f946aa63f of
#: remapp.tools.dcmdatetime.make_date_time:1
msgid "Given a DICOM date time, return a Python date time."
msgstr ""

#: a3d01853df5c46178eabf198cade3db9 of
#: remapp.tools.dcmdatetime.make_date_time:3
msgid "DICOM style date time."
msgstr ""

#: b3ace64e546b491bb02207fd4a9ce763 of remapp.tools.dcmdatetime.make_dcm_date:1
msgid ""
"Given a Python date, return a DICOM date :param pythondate:  Date :type "
"pythondate:   Python date object :returns:           DICOM date as string"
msgstr ""

#: 422725b99f8c47c89b4558eb3196d38f of
#: remapp.tools.dcmdatetime.make_dcm_date_range:1
msgid "Given one or two dates of the form yyyy-mm-dd, return a DICOM date range."
msgstr ""

#: a52a24fea52746beac6d8ab1b168e6b2 of
#: remapp.tools.dcmdatetime.make_dcm_date_range:3
msgid "Date from, string, yyyy-mm-dd, 1900-01-01 if None or badly formatted"
msgstr ""

#: a6f59e210b864373966f5a0a49454227 of
#: remapp.tools.dcmdatetime.make_dcm_date_range:4
msgid "Date until, string, yyyy-mm-dd, today if None or badly formatted"
msgstr ""

#: cc12bbcad08b43ae9422412ed63a8c4d of
#: remapp.tools.dcmdatetime.make_dcm_date_range:5
msgid "Single date range, bool, default False"
msgstr ""

#: 8b8b2352cebc424995023f21e7a8c849 of
#: remapp.tools.dcmdatetime.make_dcm_date_range:6
msgid "DICOM formatted date range or single date"
msgstr ""

#: c017f5cf5ff14a279858f7bc0d679d61 of remapp.tools.dcmdatetime.make_dcm_time:1
msgid "Return DICOM formatted time without seconds from python time"
msgstr ""

#: 8491254f2a8d4a2eaecfada2fe7df520 of remapp.tools.dcmdatetime.make_dcm_time:3
msgid "Python datetime.time object"
msgstr ""

#: 167a531553144c2c9083e14f60d85355 of remapp.tools.dcmdatetime.make_dcm_time:4
msgid "string, %H%M"
msgstr ""

#: 569f32f7e6af44d4bae09a793f403980 of
#: remapp.tools.dcmdatetime.make_dcm_time_range:1
msgid ""
"Given one or two times of the format 0123, return DICOM formatted time "
"range (without seconds)"
msgstr ""

#: 3237c773bca842e3a88bf0788744f6d5 of
#: remapp.tools.dcmdatetime.make_dcm_time_range:3
msgid "time, format 0123, 0000 if None"
msgstr ""

#: e2beca9e31084d0f92252c320f5a407b of
#: remapp.tools.dcmdatetime.make_dcm_time_range:4
msgid "time, format 0123, 2359 if None"
msgstr ""

#: 05ac5fb39e084eccb9c2c18260b1d214 of
#: remapp.tools.dcmdatetime.make_dcm_time_range:5
msgid "time range, string, format 0123-1234"
msgstr ""

#: ../../code_tools.rst:37 c9c2b045c1c8479197c5bb830f992059
msgid "Test for QA or other non-patient related studies"
msgstr ""

#: b07a5e9b5db64e938960b1b5e16e5aad of
#: remapp.tools.not_patient_indicators.get_not_pt:1
msgid "Looks for indications that a study might be a test or QA study."
msgstr ""

#: 6a8b607e973941c5b01e75543e9f7392 of
#: remapp.tools.not_patient_indicators.get_not_pt:3
msgid ""
"Some values that might indicate a study was for QA or similar purposes "
"are not recorded in the database, for example patient name. Therefore "
"this module attempts to find such indications and creates an xml style "
"string that can be recorded in the database on study import."
msgstr ""

#: fb3d05ae111243f89bad61ba3b8ff8a3 of
#: remapp.tools.not_patient_indicators.get_not_pt:8
msgid "The DICOM dataset."
msgstr ""

#: 5980a87f56cd4cdaaf68af60d806dd75 of
#: remapp.tools.not_patient_indicators.get_not_pt:10
msgid "str. -- xml style string if any trigger values are found."
msgstr ""

