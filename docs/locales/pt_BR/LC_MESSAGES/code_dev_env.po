# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2022, The Royal Marsden NHS Foundation Trust
# This file is distributed under the same license as the OpenREM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenREM 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-15 21:26+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pt_BR\n"
"Language-Team: pt_BR <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../code_dev_env.rst:3
msgid "Creating a development environment"
msgstr ""

#: ../../code_dev_env.rst:5
msgid ""
"Install Python 3.6+, preferably Python 3.8: check your Linux distribution"
" docs to see how to install a particular version; for Windows go to "
"https://www.python.org/downloads/. Check \"Add Python 3.8 to PATH\" "
"during installation."
msgstr ""

#: ../../code_dev_env.rst:8
msgid ""
"Install git: ``sudo apt install git`` or equivalent on Linux; for Windows"
" go to https://git-scm.com/download/win"
msgstr ""

#: ../../code_dev_env.rst:10
msgid ""
"*Recommended* - install an integrated development environment such as "
"`PyCharm <https://www.jetbrains.com/pycharm/>`_ or `Visual Studio Code "
"<https://code.visualstudio.com/>`_ (many others are available)."
msgstr ""

#: ../../code_dev_env.rst:13
msgid ""
"*Recommended* - install `PostgreSQL database "
"<https://www.enterprisedb.com/downloads/postgres-postgresql-downloads>`_"
msgstr ""

#: ../../code_dev_env.rst:16
msgid "Check out git repo"
msgstr ""

#: ../../code_dev_env.rst:18
msgid ""
"Either clone the main OpenREM repository, or fork it first and then clone"
" that (adapt the command accordingly):"
msgstr ""

#: ../../code_dev_env.rst:24
msgid ""
"The OpenREM source code will now be in a folder called openrem. If you "
"wish to specify the folder, you could do this by adding the folder name "
"to the clone command."
msgstr ""

#: ../../code_dev_env.rst:28
msgid "Create Python virtual environment"
msgstr ""

#: ../../code_dev_env.rst:30
msgid ""
"Linux - install the Python package ``venv`` using ``pip`` (Windows users,"
" ``venv`` should have been installed with Python automatically):"
msgstr ""

#: ../../code_dev_env.rst:37
msgid ""
"Then create the Python virtual environment in a folder called ``openrem-"
"venv`` (change as required):"
msgstr ""

#: ../../code_dev_env.rst:39
msgid "Linux:"
msgstr ""

#: ../../code_dev_env.rst:46
msgid ""
"Windows PowerShell (for ``cmd.exe`` substitute ``Activate.ps1`` with "
"``activate.bat``)"
msgstr ""

#: ../../code_dev_env.rst:53
msgid ""
"For users of VS Code, it can be useful to create the virtual environment "
"in a folder called ``.venv`` within your project folder (where you "
"checked out the git repo), then VS Code will find it automatically. If "
"you are using PyCharm you can click on the Python interpreter at the "
"bottom right and click 'Add Interpreter'."
msgstr ""

#: ../../code_dev_env.rst:59
msgid "Install the Python libraries"
msgstr ""

#: ../../code_dev_env.rst:61
msgid "Assumes:"
msgstr ""

#: ../../code_dev_env.rst:63
msgid "git repository is in a sub-folder called ``openrem`` - change as necessary"
msgstr ""

#: ../../code_dev_env.rst:64
msgid "venv is activated"
msgstr ""

#: ../../code_dev_env.rst:71
msgid "Setup OpenREM"
msgstr ""

#: ../../code_dev_env.rst:73
msgid ""
"You'll need a basic configuration of OpenREM to run any code locally - "
"copy the ``openremproject/local_settings.py.example``  to "
"``openremproject/local_settings.py`` and set a path for a SQLite database"
" etc."
msgstr ""

#: ../../code_dev_env.rst:77
msgid ""
"To use PosgreSQL instead of SQLite3, set up a user in pgAdmin 4 on "
"Windows, and an empty database with the same user as owner, or use the "
":ref:`Linux-DB` instructions on Linux."
msgstr ""

#: ../../code_dev_env.rst:81
msgid "Run test webserver"
msgstr ""

#: ../../code_dev_env.rst:83
msgid ""
"To see the changes you have made with the web interface, you can use the "
"built-in Django webserver:"
msgstr ""

#: ../../code_dev_env.rst:89
msgid ""
"In a web browser on the same computer, go to http://localhost:8000/ - you"
" should now see the message about creating users."
msgstr ""

#: ../../code_dev_env.rst:93
msgid "Get coding"
msgstr ""

#: ../../code_dev_env.rst:95
msgid ""
"Create a branch in the git repository, and start making your changes, "
"adding your features etc!"
msgstr ""

#: ../../code_dev_env.rst:97
msgid ""
"When you are done, push it back to Bitbucket and send in a pull request! "
"Ideally, try and use the ``refs #123`` syntax in commit messages to "
"reference the issue on Bitbucket you are working on."
msgstr ""

