version: '3.7'

services:
  openrem:
    container_name: openrem
    restart: always
    # to build image each time
    build:
      context: .
      dockerfile: Dockerfile
    # to use pre-built image
#    image: openrem_image:latest
    command: gunicorn openremproject.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - static_volume:/home/app/openrem/staticfiles
      - migrations_volume:/home/app/openrem/remapp/migrations
      - type: bind
        source: ./imports
        target: /imports
      - type: bind
        source: ./logs
        target: /logs
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  worker:
    restart: always
    # to build image each time
    build:
      context: .
      dockerfile: Dockerfile
    # to use pre-built image
#    image: openrem_image:latest
    command: celery worker -A openremproject -Q default --pidfile=/logs/celery.pid --logfile=/logs/celery.log
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - type: bind
        source: ./logs
        target: /logs
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  flower:
    restart: always
    # to build image each time
    build:
      context: .
      dockerfile: Dockerfile
    # to use pre-built image
#    image: openrem_image:latest
    command: celery flower -A openremproject
    volumes:
      - type: bind
        source: ./logs
        target: /logs
    expose:
      - 5555
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker

  db:
    restart: always
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    restart: always
    build: ./nginx
    volumes:
      - media_volume:/home/app/openrem/mediafiles
      - static_volume:/home/app/openrem/staticfiles
    ports:
      - 80:80
    depends_on:
      - openrem

  broker:
    restart: always
    image: rabbitmq:3-management-alpine

  orthanc:
    container_name: orthanc
    image: jodogne/orthanc:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: bind
        source: ./imports
        target: /imports

volumes:
  postgres_data:
  media_volume:
  static_volume:
  migrations_volume:
